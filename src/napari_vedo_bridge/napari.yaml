name: napari-vedo-bridge
display_name: napari vedo bridge
contributions:
  commands:
    - id: napari-vedo-bridge.cutter_widget
      python_name: napari_vedo_bridge._cutter_widget:VedoCutter
      title: Interactive mesh cutting with Vedo

    - id: napari-vedo-bridge.write_points
      python_name: napari_vedo_bridge._writer:write_points
      title: Save points layer to vtp
    - id: napari-vedo-bridge.write_surfaces
      python_name: napari_vedo_bridge._writer:write_surfaces
      title: Save surface layer to vtp

    - id: napari-vedo-bridge.load_points
      python_name: napari_vedo_bridge._reader:get_reader
      title: Load points from disk
    - id: napari-vedo-bridge.load_surfaces
      python_name: napari_vedo_bridge._reader:get_reader
      title: Load surfaces from disk

    - id: napari-vedo-bridge.compute_normals
      python_name: napari_vedo_bridge._mesh:compute_normals
      title: Compute normals for the given mesh
    - id: napari-vedo-bridge.shrink
      python_name: napari_vedo_bridge._mesh:shrink
      title: Shrink the given mesh
    - id: napari-vedo-bridge.join
      python_name: napari_vedo_bridge._mesh:join
      title: Join the given meshes
    - id: napari-vedo-bridge.subdivide
      python_name: napari_vedo_bridge._mesh:subdivide
      title: Subdivide the given mesh
    - id: napari-vedo-bridge.decimate
      python_name: napari_vedo_bridge._mesh:decimate
      title: Decimate the given mesh
    - id: napari-vedo-bridge.decimate_pro
      python_name: napari_vedo_bridge._mesh:decimate_pro
      title: Decimate the given mesh using the Pro algorithm
    - id: napari-vedo-bridge.decimate_binned
      python_name: napari_vedo_bridge._mesh:decimate_binned
      title: Decimate the given mesh using the Binned algorithm
    - id: napari-vedo-bridge.smooth
      python_name: napari_vedo_bridge._mesh:smooth
      title: Smooth the given mesh
    - id: napari-vedo-bridge.fill_holes
      python_name: napari_vedo_bridge._mesh:fill_holes
      title: Fill holes in the given mesh
    - id: napari-vedo-bridge.inside_points
      python_name: napari_vedo_bridge._mesh:inside_points
      title: Get the points inside the given mesh
    - id: napari-vedo-bridge.extrude
      python_name: napari_vedo_bridge._mesh:extrude
      title: Extrude the given mesh
    - id: napari-vedo-bridge.split
      python_name: napari_vedo_bridge._mesh:split
      title: Split the given mesh into connected components
    - id: napari-vedo-bridge.extract_largest_region
      python_name: napari_vedo_bridge._mesh:extract_largest_region
      title: Extract the largest region from the given mesh
    - id: napari-vedo-bridge.binarize
      python_name: napari_vedo_bridge._mesh:binarize
      title: Binarize the given mesh
    - id: napari-vedo-bridge.smooth_points
      python_name: napari_vedo_bridge._points:smooth_points
      title: Smooth the given points
    - id: napari-vedo-bridge.decimate_points
      python_name: napari_vedo_bridge._points:decimate_points
      title: Decimate the given points
    - id: napari-vedo-bridge.cluster_points
      python_name: napari_vedo_bridge._points:cluster_points
      title: Cluster the given points
    - id: napari-vedo-bridge.remove_outliers
      python_name: napari_vedo_bridge._points:remove_outliers
      title: Remove outliers from the given points
    - id: napari-vedo-bridge.compute_normals_points
      python_name: napari_vedo_bridge._points:compute_normals
      title: Compute normals for the given points
    - id: napari-vedo-bridge.extract_largest_cluster
      python_name: napari_vedo_bridge._points:extract_largest_cluster
      title: Extract the largest cluster from the given points

  widgets:
    - command: napari-vedo-bridge.cutter_widget
      display_name: Mesh cutter
      autogenerate: true
    - command: napari-vedo-bridge.compute_normals
      display_name: Compute normals for the given mesh
      autogenerate: true
    - command: napari-vedo-bridge.shrink
      display_name: Shrink the given mesh
      autogenerate: true
    - command: napari-vedo-bridge.join
      display_name: Join the given meshes
      autogenerate: true
    - command: napari-vedo-bridge.subdivide
      display_name: Subdivide the given mesh
      autogenerate: true
    - command: napari-vedo-bridge.decimate
      display_name: Decimate the given mesh
      autogenerate: true
    - command: napari-vedo-bridge.decimate_pro
      display_name: Decimate the given mesh using the Pro algorithm
      autogenerate: true
    - command: napari-vedo-bridge.decimate_binned
      display_name: Decimate the given mesh using the Binned algorithm
      autogenerate: true
    - command: napari-vedo-bridge.smooth
      display_name: Smooth the given mesh
      autogenerate: true
    - command: napari-vedo-bridge.fill_holes
      display_name: Fill holes in the given mesh
      autogenerate: true
    - command: napari-vedo-bridge.inside_points
      display_name: Get the points inside the given mesh
      autogenerate: true
    - command: napari-vedo-bridge.extrude
      display_name: Extrude the given mesh
      autogenerate: true
    - command: napari-vedo-bridge.split
      display_name: Split the given mesh into connected components
      autogenerate: true
    - command: napari-vedo-bridge.extract_largest_region
      display_name: Extract the largest region from the given mesh
      autogenerate: true
    - command: napari-vedo-bridge.binarize
      display_name: Binarize the given mesh
      autogenerate: true
    - command: napari-vedo-bridge.smooth_points
      display_name: Smooth the given points
      autogenerate: true
    - command: napari-vedo-bridge.decimate_points
      display_name: Decimate the given points
      autogenerate: true
    - command: napari-vedo-bridge.cluster_points
      display_name: Cluster the given points
      autogenerate: true
    - command: napari-vedo-bridge.remove_outliers
      display_name: Remove outliers from the given points
      autogenerate: true
    - command: napari-vedo-bridge.compute_normals_points
      display_name: Compute normals for the given points
      autogenerate: true
    - command: napari-vedo-bridge.extract_largest_cluster
      display_name: Extract the largest cluster from the given points
      autogenerate: true

  menus:
    napari/file/io:
      - command: napari-vedo-bridge.load_points
      - command: napari-vedo-bridge.load_surfaces
      - command: napari-vedo-bridge.write_points
      - command: napari-vedo-bridge.write_surfaces

    napari/layers/transform:
      - command: napari-vedo-bridge.cutter_widget
      - command: napari-vedo-bridge.extrude
      - command: napari-vedo-bridge.split
      - command: napari-vedo-bridge.join
      - command: napari-vedo-bridge.shrink
      - command: napari-vedo-bridge.subdivide
      - command: napari-vedo-bridge.compute_normals
    napari/layers/filter:
      - command: napari-vedo-bridge.smooth
      - command: napari-vedo-bridge.fill_holes
      - command: napari-vedo-bridge.decimate
      - command: napari-vedo-bridge.decimate_pro
      - command: napari-vedo-bridge.decimate_binned
      - command: napari-vedo-bridge.smooth_points
      - command: napari-vedo-bridge.decimate_points
      - command: napari-vedo-bridge.cluster_points
      - command: napari-vedo-bridge.remove_outliers
      - command: napari-vedo-bridge.compute_normals_points
      - command: napari-vedo-bridge.extract_largest_cluster
      - command: napari-vedo-bridge.inside_points

    napari/layers/segment:
      - command: napari-vedo-bridge.extract_largest_region
      - command: napari-vedo-bridge.binarize

    napari/layers/filter:


  writers:
    - command: napari-vedo-bridge.write_points
      layer_types:
      - points?
      filename_extensions:
      - .vtp
    - command: napari-vedo-bridge.write_surfaces
      layer_types:
      - surface
      filename_extensions:
      - .vtp
      - .vtk
      - .obj
      - .stl
      - .ply

  readers:
    - command: napari-vedo-bridge.load_points
      filename_patterns:
      - '*.vtp'
      accepts_directories: true
    - command: napari-vedo-bridge.load_surfaces
      filename_patterns:
      - '*.vtp'
      - '*.vtk'
      - '*.obj'
      - '*.stl'
      - '*.ply'
      accepts_directories: true
